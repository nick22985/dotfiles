#!/usr/bin/env bash

# Clean Lazy.nvim - Remove Lazy.nvim cache and plugin data

set -e

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úì${NC} $1"
}

warning() {
    echo -e "${YELLOW}‚ö†${NC} $1"
}

error() {
    echo -e "${RED}‚ùå${NC} $1"
}

NVIM_DATA_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/nvim"
NVIM_CACHE_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/nvim"
NVIM_STATE_DIR="${XDG_STATE_HOME:-$HOME/.local/state}/nvim"

LAZY_PLUGINS_DIR="$NVIM_DATA_DIR/lazy"
LAZY_CACHE_DIR="$NVIM_CACHE_DIR/lazy"
LAZY_STATE_DIR="$NVIM_STATE_DIR/lazy"

log "üßπ Cleaning Lazy.nvim plugins and cache..."

remove_dir() {
    local dir="$1"
    local name="$2"

    if [[ -d "$dir" ]]; then
        log "Removing $name: $dir"
        rm -rf "$dir"
        success "$name removed"
    else
        warning "$name not found: $dir"
    fi
}

remove_dir "$LAZY_PLUGINS_DIR" "Lazy plugins"
remove_dir "$LAZY_CACHE_DIR" "Lazy cache"
remove_dir "$LAZY_STATE_DIR" "Lazy state"

log "Cleaning additional Neovim cache directories..."
remove_dir "$NVIM_CACHE_DIR/luac" "Lua bytecode cache"
remove_dir "$NVIM_CACHE_DIR/packer_hererocks" "Packer hererocks cache"

remove_dir "$NVIM_DATA_DIR/swap" "Swap files"
remove_dir "$NVIM_DATA_DIR/backup" "Backup files"
remove_dir "$NVIM_DATA_DIR/undo" "Undo files"

SHADA_FILE="$NVIM_DATA_DIR/shada/main.shada"
if [[ -f "$SHADA_FILE" ]]; then
    log "Removing shada file: $SHADA_FILE"
    rm -f "$SHADA_FILE"
    success "Shada file removed"
fi

LAZY_LOCK_FILES=(
    "$HOME/.config/nvim/lazy-lock.json"
    "$NVIM_DATA_DIR/lazy-lock.json"
)

for lock_file in "${LAZY_LOCK_FILES[@]}"; do
    if [[ -f "$lock_file" ]]; then
        log "Removing lock file: $lock_file"
        rm -f "$lock_file"
        success "Lock file removed"
    fi
done

MASON_DIR="$NVIM_DATA_DIR/mason"
if [[ -d "$MASON_DIR" ]]; then
    read -p "$(echo -e "${YELLOW}?${NC} Also clean Mason LSP/DAP installations? (y/N): ")" -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        remove_dir "$MASON_DIR" "Mason installations"
    fi
fi

TREESITTER_DIR="$NVIM_DATA_DIR/site/pack/packer/start/nvim-treesitter/parser"
if [[ -d "$TREESITTER_DIR" ]]; then
    read -p "$(echo -e "${YELLOW}?${NC} Also clean Treesitter parsers? (y/N): ")" -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        remove_dir "$TREESITTER_DIR" "Treesitter parsers"
    fi
fi

success "üéâ Lazy.nvim cleanup complete!"
